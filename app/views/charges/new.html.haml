.row
  .col-xs-12.col-sm-12.col-md-12.col-lg-12
    - if !user_signed_in?
      .alert.alert-info.alert-dismissible{:role => "alert"}
        %button.close{:type => "button", :data => {:dismiss => "alert"}, "aria-label" => "Close"}
          %span{"aria-hidden" => true}
            &times;
        = link_to(image_tag("FB-f-Logo__blue_29.png", :alt => "Sign in with Facebook"), omniauth_authorize_path(:user, :facebook))
        Sign in with
        = link_to("Facebook", omniauth_authorize_path(:user, :facebook))
        to personalize your experience

    %h2
      Bongloy Demo
      - if user_signed_in?
        = "#{current_user.display_name}!"

#bongloy_checkout.row
  .col-xs-12.col-sm-12.col-md-12.col-lg-12
    %h3
      Bongloy Checkout
    %p
      Bongloy Checkout is an embeddable payment form for desktop, tablet, and mobile devices. It works within your site so customers can pay instantly, without being redirected away to complete the transaction.

.row
  .col-xs-12.col-sm-12.col-md-5.col-lg-5
    .row
      .col-xs-12.col-sm-12.col-md-6.col-lg-6
        %h4
          = @checkout_configuration.description
        %p
          This shampoo has rich organic Argan oil which provides moisture and nutrition for severely damaged hair. Rosehip oil and Primrose oil give a glossy, tangle free finish.
        = simple_form_for(@charge, :html => {:id => "new_charge_checkout_js"}) do |f|
          = render("form_default_fields", :f => f)
          %script{:src => @checkout_configuration.checkout_js_url, :class => "bongloy-button", :data => {:key => @checkout_configuration.publishable_key, :image => @checkout_configuration.image_url, :name => @checkout_configuration.name, :description => @checkout_configuration.description, :label => @checkout_configuration.label, :amount => @checkout_configuration.amount}}
      .col-xs-12.col-sm-12.col-md-6.col-lg-6
        = image_tag("nature_republic_argan_essential_deep_care_shampoo.jpg", :class => "img-responsive", :alt => "Nature Republic Argan Essential Deep Care Shampoo")

  .col-xs-12.col-sm-12.col-md-7.col-lg-7
    = render "sample_cards"
.row
  .col-xs-12.col-sm-12.col-md-12.col-lg-12
    %p
      You can generate the blue button with the following html snippit:
    %p
      %pre
        %code.code
          = preserve do
            :escaped
              <form action="/charge" method="POST">
                <script
                  src="#{@checkout_configuration.checkout_js_url}" class="bongloy-button"
                  data-key="#{@checkout_configuration.publishable_key}"
                  data-image="#{@checkout_configuration.image_url}"
                  data-name="#{@checkout_configuration.name}"
                  data-description="#{@checkout_configuration.description}"
                  data-label="#{@checkout_configuration.label}"
                  data-amount="#{@checkout_configuration.amount}"
                  data-locale="auto">
                </script>
              </form>

.row
  .col-xs-12.col-sm-12.col-md-12.col-lg-12
    %h3
      bongloy.js
.row
  .col-xs-12.col-sm-12.col-md-5.col-lg-5
    %p
      You can also use bongloy.js to create your own custom form for collecting Payment. See the
      = link_to("source code", "https://github.com/dwilkie/bongloy-demo")
      for an example of how to create the form below:
    = simple_form_for(@charge, :html => {:autocomplete => "on", :data => {:payment_form => true}}) do |f|
      = render("form_default_fields", :f => f)
      #card_number.form-group
        %label.control-label{:for => "cc_number"}
          = fa_icon("credit-card", :text => "Card Number")
        %input#cc_number.input-lg.form-control.cc-number{:type => "text", :pattern => "\\d*", :autocomplete => "cc-number", :data => {:payment_card_number => true}}
        %p.help-block
      #card_expiry.form-group
        %label.control-label{:for => "cc_exp"}
          = fa_icon("calendar", :text => "Expires MM/YY")
        %input#cc_exp.input-lg.form-control.cc-exp{:type => "text", :pattern => "\\d*", :autocomplete => "cc-exp", :data => {:payment_card_exp => true}}
      #card_cvc.form-group
        %label.control-label{:for => "cc_cvc"}
          = fa_icon("lock", :text => "Security Code / PIN")
        %input#cc_cvc.input-lg.form-control.cc-cvc{:type => "password", :pattern => "\\d*", :autocomplete => "off", :data => {:payment_card_cvc => true}}
      .form-group.btn-group
        = f.button :submit, "Pay with Bongloy", :class => "btn btn-success"
  .col-xs-12.col-sm-12.col-md-7.col-lg-7
    = render "sample_cards"
